// Version: 1.0.0
type AccountId = Blob;
type AccountId__1 = AccountId;
type AccountId__2 = Blob;
type AccountId__3 = AccountId__2;
type AssocList<K, V> = List<(K, V)>;
type AssocList__1<K, V> = AssocList<K, V>;
type Branch<K, V> = {left : Trie<K, V>; right : Trie<K, V>; size : Nat};
type DataTemp =
  {
    globalLastTxns : Deque<Txid__1>;
    globalTxns : Deque<(Txid__1, Time)>;
    lastTxns_ : Trie<AccountId__1, Deque<Txid__1>>;
    lockedTxns_ : Trie<AccountId__1, [Txid__1]>;
    setting : Setting__1;
    storeRecords : List<(Txid__1, Nat)>;
    txnRecords : Trie<Txid__1, TxnRecord__1>
  };
type Deque<T> = (List__1<T>, List__1<T>);
type Gas = {#cycles : Nat; #noFee; #token : Nat};
type Hash = Nat32;
type Key<K> = {hash : Hash; key : K};
type Leaf<K, V> = {keyvals : AssocList__1<Key<K>, V>; size : Nat};
type List<T> = ?(T, List<T>);
type List__1<T> = List<T>;
type Metadata = {content : Text; name : Text};
type Metadata__1 = Metadata;
type Operation =
  {
    #approve : {allowance : Nat};
    #executeTransfer : {fallback : Nat; lockedTxid : Txid};
    #lockTransfer : {decider : AccountId; expiration : Time__1; locked : Nat};
    #transfer : {action : {#burn; #mint; #send}}
  };
type Setting =
  {
    EN_DEBUG : Bool;
    MAX_CACHE_NUMBER_PER : Nat;
    MAX_CACHE_TIME : Nat;
    MAX_STORAGE_TRIES : Nat
  };
type Setting__1 = Setting;
type Subaccount = Blob;
type Time = Int;
type Time__1 = Time;
type Transaction =
  {
    data : ?Blob;
    from : AccountId;
    operation : Operation;
    to : AccountId;
    value : Nat
  };
type Trie<K, V> = {#branch : Branch<K, V>; #empty; #leaf : Leaf<K, V>};
type Txid = Blob;
type Txid__1 = Txid;
type TxnRecord =
  {
    caller : AccountId;
    gas : Gas;
    index : Nat;
    msgCaller : ?Principal;
    nonce : Nat;
    timestamp : Time__1;
    transaction : Transaction;
    txid : Txid
  };
type TxnRecord__1 = TxnRecord;
actor {
  stable var FEE_TO : Blob;
  stable var __drc202Data : [DataTemp];
  stable var __drc202DataNew : ?DataTemp;
  stable var balances :
    {
      #branch : Branch<AccountId__3, Nat>;
      #empty;
      #leaf : Leaf<AccountId__3, Nat>
    };
  stable decimals__ : Nat8;
  stable var drc202_lastStorageTime : Int;
  stable var fee_ : Nat;
  stable var genesisCreated : Bool;
  stable var index : Nat;
  stable var metadata_ : [Metadata__1];
  stable var name_ : Text;
  stable owner_ : Blob;
  stable owner_account : {owner : Principal; subaccount : ?Subaccount};
  stable var symbol_ : Text;
  stable var totalSupply_ : Nat
};
